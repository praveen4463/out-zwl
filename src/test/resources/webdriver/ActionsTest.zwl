# Action functions

staticSitePrefix = staticSite.urlPrefix
# SCROLL--------------------------------------------------------------------------------------------
# scroll to element
openUrl("https://developer.mozilla.org/en-US/docs/Web/API/Document/drag_event")
viewportHeight = executeScript("return window.innerHeight;")
frame = findElement("#frame_Examples")
rectBefore = getElementRect(frame)
scroll(frame)
rectAfter = getElementViewportCoordinates(frame, false)
assertTrue(rectBefore.y > viewportHeight && rectAfter.y <= 1)

# scroll to offset from element. Get the location of frame and specification block, and the
# vertical distance between them. Now invoke scroll, that should scroll to an offset from frame, and
# that offset is the distance between specs and frame, this should scroll to specs and specs should
# be on top of viewport now. Now get specs's viewport location and see if it's on top and was
# previously not in viewport.
openUrl("https://developer.mozilla.org/en-US/docs/Web/API/Document/drag_event")
viewportHeight = executeScript("return window.innerHeight;")
frame = findElement("#frame_Examples")
frameRect = getElementRect(frame)
specs = findElement("#Specifications")
specsRectBefore = getElementRect(specs)
offsetY = specsRectBefore.y - frameRect.y
scroll(frame, 0, offsetY)
specsRectAfter = getElementViewportCoordinates(specs, false)
assertTrue(specsRectBefore.y > viewportHeight && specsRectAfter.y <= 1)

# scroll to offset from current location, use the previous state for this. Specs was at top of
# viewport and difference between it and frame was offsetY. We can negate it and give to scroll so
# that it can move upwards to frame, then verify frame is now at the top.
scroll(0, -offsetY)
assertTrue(getElementViewportCoordinates(frame, false).y <= 1)

# scroll to element in a frame, to see whether scrolling working in a frame cause we're using js
# under the hood
#openUrl("https://jsfiddle.net/praveen4463/w0eg4azx/")
openUrl(staticSitePrefix + "long_scroll_c.html")
switchFrame("iframe[name='result']")
viewportHeight = executeScript("return window.innerHeight;")
button = findElement("input")
buttonRectBefore = getElementRect(button)
scroll(button)
buttonRectAfter = getElementViewportCoordinates(button, false)
assertTrue(buttonRectBefore.y > viewportHeight && buttonRectAfter.y <= 1)

# DRAG AND DROP, PERFORM_ACTION POINTER MOVE/CLICK-------------------------------------------------
# drag and drop, only one that works in chrome/ff both.
openUrl("http://demo.guru99.com/test/drag_drop.html")
dragAndDrop("#credit2", "#bank")
if browser.name != "IE" {
  # this works only when requireWindowFocus is true and currently we may not use it as it has issues in elem.sendKeys.
  assertTrue(getElementText(findElement("#bank > li")) == "BANK")
}

# drag and drop using performAction
# Doesn't work in chrome as the item being dropped drops to end, it doesn't find a gap in
# between, work manually. Possible problem of events not firing on dragstart.
openUrl("https://jqueryui.com/draggable/#sortable")
# sometimes when js runs late on load, first the default functionality content opens, then js runs
# and switches to 'sortable' content. They both have the #draggable element so when we find it,
# both of them have it but if the default content goes away to load 'sortable' a stale exception
# occurs. This doesn't happen all the time and especially never in chrome, it always shows the
# sortable content first. We can't use anything like untilStale because draggable won't always stale.
# We can't use some new function like untilNotStale or untilEnabled because this element is on
# both content and as it's found and is intractable, these will return true. The only reliable way
# i found is to wait for the text since it is different in both contents.
untilTextContains("div.demo-description > p", "seamlessly with sortables")
switchFrame("iframe[src='/resources/demos/draggable/sortable.html']")

draggable = findElement("li#draggable") # safe to find now.
performAction(
  move(draggable),
  hold(),
  move("#sortable > .ui-state-default:nth-of-type(2)", 0, -15),
  release()
)

# Debugging drag drop problem
# Check that actions can move, click and hold/release properly which looks fine
# and proves that problem is in native events firing in chrome/ff both drivers. Will log an issue
# for drivers later.
#openUrl("https://jsfiddle.net/praveen4463/w63xLyu7/")
openUrl(staticSitePrefix + "mouse_move_click_c.html")
switchFrame("iframe[name='result']")
performAction(
  move(".div1"),
  clickOnce(),
  move(".div2"),
  clickOnce(),
  move(".div3"),
  clickOnce(),
  move(".div4"),
  clickOnce()
)
#openUrl("https://jsfiddle.net/praveen4463/qfxkoc39/")mouse_down_then_up
openUrl(staticSitePrefix + "mouse_down_then_up_c.html")
switchFrame("iframe[name='result']")
performAction(
  move(".div1"),
  hold(),
  move(".div2"),
  release(),
  move(".div3"),
  hold(),
  move(".div4"),
  release()
)

# A simple type of drop that works, no assert just for the eyes
openUrl("https://jqueryui.com/draggable/#default")
switchFrame(".demo-frame")
performAction(
  move("#draggable"),
  hold(),
  move(400, 170),
  release()
)
/*
# Following doesn't work, example like https://jsfiddle.net/tabalinas/drp1cgar/8/ doesn't
# work as well.
#openUrl("https://jsfiddle.net/praveen4463/ex05Lgpz/")
openUrl(staticSitePrefix + "drag_drop_c.html")
switchFrame("iframe[name='result']")
performAction(
  move("#draggable"),
  hold(),
  move(".dropzone:nth-of-type(4)"),
  release()
)*/

# PERFORM_ACTION KEYS-------------------------------------------------------------------------------
# send keys to elements with some key down using performAction
#openUrl("https://jsfiddle.net/praveen4463/hsotm4xb/")
openUrl(staticSitePrefix + "content_editable_c.html")
switchFrame("iframe[name='result']")
div1 = findElement(".div1")
performAction(
  focus(div1),
  shiftDown(),
  sendKeys("hey man!"),
  shiftUp(),
  sendKeys(" I was thinking India is a nice country.")
)
# sometimes chrome doesn't get any text, let's put a wait until a text is found.
assertTrue(untilTextNonEmpty(div1) == "HEY MAN! I was thinking India is a nice country.")